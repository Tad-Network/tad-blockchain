name: Linux .deb installer on Python 3.8

on:
  push:
    branches:
      - main
    tags:
      - '**'
  pull_request:
    branches:
      - '**'

jobs:
  build:
    name: Linux .deb installer on Python 3.8
    runs-on: ${{ matrix.os }}
    timeout-minutes: 40
    strategy:
      fail-fast: false
      max-parallel: 4
      matrix:
        python-version: [ 3.8 ]
        os: [ ubuntu-18.04 ]

    steps:
      - name: Cancel previous runs on the same branch
        if: ${{ github.ref != 'refs/heads/main' }}
        uses: styfle/cancel-workflow-action@0.9.1
        with:
          access_token: ${{ github.token }}

      - name: Checkout Code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
          submodules: recursive

      - name: Cleanup any leftovers that exist from previous runs
        run: bash build_scripts/clean-runner.sh || true

      - name: Setup Python environment
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Cache npm
        uses: actions/cache@v2.1.6
        env:
          cache-name: cache-node-modules
        with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - name: Get pip cache dir
        id: pip-cache
        run: |
          echo "::set-output name=dir::$(pip cache dir)"

      - name: Cache pip
        uses: actions/cache@v2.1.6
        with:
          # Note that new runners may break this https://github.com/actions/cache/issues/292
          path: ${{ steps.pip-cache.outputs.dir }}
          key: ${{ runner.os }}-pip-${{ hashFiles('**/setup.py') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Run install script
        env:
          INSTALL_PYTHON_VERSION: ${{ matrix.python-version }}
          BUILD_VDF_CLIENT: "N"
        run: |
          sh install.sh

      - name: Setup Node 14.x
        uses: actions/setup-node@v2.4.1
        with:
          node-version: '14.x'

      - name: Add jq
        run: sudo apt-get install -y jq

      - name: Build .deb packages
        run: |
          . ./activate
          sudo apt-get -y install rpm
          ldd --version
          cd ./tad-blockchain-gui
          npm i -g npm@latest
          git status
          cd ../build_scripts
          sh build_linux_deb.sh amd64

      - name: Upload Linux artifacts
        uses: actions/upload-artifact@v2
        with:
          name: Linux-Installers
          path: ${{ github.workspace }}/build_scripts/final_installer/

      - name: Create Checksums
        if: startsWith(github.ref, 'refs/tags/') || github.ref == 'refs/heads/main'
        env:
          CHIA_INSTALLER_VERSION: ${{ steps.version_number.outputs.CHIA_INSTALLER_VERSION }}
        run: |
           ls ${{ github.workspace }}/build_scripts/final_installer/
           sha256sum ${{ github.workspace }}/build_scripts/final_installer/chia-blockchain_${TAD_INSTALLER_VERSION}_amd64.deb > ${{ github.workspace }}/build_scripts/final_installer/tad-blockchain_${TAD_INSTALLER_VERSION}_amd64.deb.sha256
           ls ${{ github.workspace }}/build_scripts/final_installer/

      - name: Get tag name
        if: startsWith(github.ref, 'refs/tags/')
        id: tag-name
        run: |
          echo "::set-output name=TAG_NAME::$(echo ${{ github.ref }} | cut -d'/' -f 3)"
          echo "::set-output name=REPO_NAME::$(echo ${{ github.repository }} | cut -d'/' -f 2)"

      - name: Mark installer complete
        if: startsWith(github.ref, 'refs/tags/')
        run: |
          curl -s -XPOST -H "Authorization: Bearer ${{ secrets.GLUE_ACCESS_TOKEN }}" --data '{"chia_ref": "${{ steps.tag-name.outputs.TAG_NAME }}"}' ${{ secrets.GLUE_API_URL }}/api/v1/${{ steps.tag-name.outputs.REPO_NAME }}/${{ steps.tag-name.outputs.TAG_NAME }}/success/build-linux-deb
